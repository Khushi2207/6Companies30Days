int dfs(int i,int j,int &k,vector<vector<int>>& grid)
    {
        if(i<0 || i>=grid.size() || j<0 || j>=grid[0].size() || grid[i][j]==0)
        return 0;
        
        k++;
        grid[i][j]=0;
        dfs(i+1,j,k,grid);
        dfs(i,j+1,k,grid);
        dfs(i+1,j+1,k,grid);
        dfs(i-1,j,k,grid);
        dfs(i,j-1,k,grid);
        dfs(i-1,j-1,k,grid);
        dfs(i+1,j-1,k,grid);
        dfs(i-1,j+1,k,grid);
        
    }
    
    
    
    int findMaxArea(vector<vector<int>>& grid) 
    {
        int n=grid.size();
        int m=grid[0].size();
        vector<int>len;
        int k=0;
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                
                if(grid[i][j]==1)
                {
                    k=0;
                    dfs(i,j,k,grid);
                    len.push_back(k);
                }
            }
        }
        
        
        return *max_element(len.begin(),len.end());
       
    }
